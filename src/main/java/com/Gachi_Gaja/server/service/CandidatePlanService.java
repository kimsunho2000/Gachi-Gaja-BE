package com.Gachi_Gaja.server.service;

import com.Gachi_Gaja.server.domain.CandidatePlan;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.UUID;

@Service
@RequiredArgsConstructor
public class CandidatePlanService {

    private final GeminiService geminiService;

    /*
    여행 계획 후보 생성 메서드
     */
    public void generateCandidatePlan() {
        // 모임 정보, 요구사항 가져오기

        // 프롬프트 생성
        String prompt = "당신은 여행 정보와 요구 사항을 바탕으로 최적의 여행 계획을 제시하는 여행 플래너입니다.\n" +
                "아래 정보를 토대로 최적의 여행 계획을 제시하라.\n" +
                "[여행 정보]\n" +
                "- 모임 관계 : \n" +
                "- 여행지 : \n" +
                "- 시작 장소, 시간 : \n" +
                "- 종료 장소, 시간 : \n" +
                "- 교통 수단 : \n" +
                "- 여행 기간 : \n" +
                "- 인당 예산 :\n" +
                "- 인원 : \n" +
                "[요구 사항]\n" +
                "- 여행 스타일 : \n" +
                "- 일정 구성 : \n" +
                "- 숙소 선택 기준 : \n" +
                "- 숙소 종류 : \n" +
                "- 식사 예산 : \n" +
                "- 힉습관 : \n" +
                "- 이동 거리 : \n" +
                "- 가고 싶은 곳 : \n" +
                "[출력 예시]\n" +
                "📌 1일차\n" +
                "- 오전 : 대전역 도착\n" +
                "- 중식 : 택시) 오씨 칼국수 (칼국수)\n" +
                "- 오후 : 도보) 성심당 본점 및 케익 부띠끄 방문\n" +
                "- 석식 : 버스) 태평소 국밥 택시 이동 및 소고기 국밥, 육사시미 식사\n" +
                "- 숙소 : 도보) 토요 코인 호텔\n" +
                "\n" +
                "🌟 계획 설명\n" +
                "- 여유로운 일정 선호를 반영했어요!\n" +
                "[참고 사항]\n" +
                "- 키워드 옆 숫자가 높을 수록 가중치 증가 (1명일 시 숫자 표기 X)\n" +
                "- 동일 가중치의 키워드가 있을 시 일별 적용\n" +
                "- 실제 운영 중인 식당, 관광지, 숙소로 일정 구성\n" +
                "- 식당, 관광지, 숙소명 구체적으로 기제\n" +
                "- 메뉴, 관광지 겹치지 않게 구성\n" +
                "[출력 형식]\n" +
                "- 출력 예시에 맞춰 간결히 출력하고 그 외는 출력 X\n" +
                "- 계획 설명은 해당 계획을 세운 근거를 100자 내외로 작성";

        // Gemini 호출 및 답변 받기
        String planContent = geminiService.generateContent(prompt);

        // 여행 계획 후보 생성

        // 여행 계획 후보 저장
    }

    /*
    여행 계획 후보 생성 테스트 메서드 (추후 삭제)
     */
    /*
    public String generateCandidatePlanTest() {
        // 프롬프트 생성
        String prompt = "당신은 여행 정보와 요구 사항을 바탕으로 최적의 여행 계획을 제시하는 여행 플래너입니다.\n" +
                "아래 정보를 토대로 최적의 여행 계획을 제시하라.\n" +
                "[여행 정보]\n" +
                "- 모임 관계 : 친구\n" +
                "- 여행지 : 부산\n" +
                "- 시작 장소, 시간 : 부산역, 11:00\n" +
                "- 종료 장소, 시간 : 부산역, 13:00\n" +
                "- 교통 수단 : 버스, 도보\n" +
                "- 여행 기간 : 2025-10-11 ~ 2025-10-13\n" +
                "- 인당 예산 : 500000\n" +
                "- 인원 : 4\n" +
                "[요구 사항]\n" +
                "- 여행 스타일 : 아침형, 저녁형 2, 맛집 탐방 4, 쇼핑 2\n" +
                "- 일정 구성 : 알차게 2, 여유롭게 2\n" +
                "- 숙소 선택 기준 : 위치\n" +
                "- 숙소 종류 : 가격\n" +
                "- 식사 예산 : 저가\n" +
                "- 힉습관 : \n" +
                "- 이동 거리 : 최소 이동, 도보 위주\n" +
                "- 가고 싶은 곳 : \n" +
                "[출력 예시]\n" +
                "📌 1일차\n" +
                "- 오전 : 대전역 도착\n" +
                "- 중식 : 택시) 오씨 칼국수 (칼국수)\n" +
                "- 오후 : 도보) 성심당 본점 및 케익 부띠끄 방문\n" +
                "- 석식 : 버스) 태평소 국밥 택시 이동 및 소고기 국밥, 육사시미 식사\n" +
                "- 숙소 : 도보) 토요 코인 호텔\n" +
                "\n" +
                "🌟 계획 설명\n" +
                "- 여유로운 일정 선호를 반영했어요!\n" +
                "[참고 사항]\n" +
                "- 키워드 옆 숫자가 높을 수록 가중치 증가 (1명일 시 숫자 표기 X)\n" +
                "- 동일 가중치의 키워드가 있을 시 일별 적용\n" +
                "- 실제 운영 중인 식당, 관광지, 숙소로 일정 구성\n" +
                "- 식당, 관광지, 숙소명 구체적으로 기제\n" +
                "- 메뉴, 관광지 겹치지 않게 구성\n" +
                "[출력 형식]\n" +
                "- 출력 예시에 맞춰 간결히 출력하고 그 외는 출력 X\n" +
                "- 계획 설명은 해당 계획을 세운 근거를 100자 내외로 작성";

        // Gemini 호출 및 답변 받기
        String planContent = geminiService.generateContent(prompt);

        return planContent;
    }
     */

}
